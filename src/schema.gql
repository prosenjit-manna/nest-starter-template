# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type BaseListResponse {
  totalPage: Float!
  currentPage: Float!
  perPage: Float!
  totalRows: Float!
}

type RoleResponse {
  title: String!
  name: String!
  id: String!
  description: String
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type RoleListResponse {
  role: [RoleResponse!]!
  pagination: BaseListResponse!
}

type RoleCreateResponse {
  id: String!
}

type PrivilegeResponse {
  name: String!
  group: String!
  id: String!
  type: type!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

enum type {
  BASE
}

type PrivilegeListResponse {
  privilege: [PrivilegeResponse!]!
}

type RoleUpdateResponse {
  id: String!
}

type RolePrivilegeResponse {
  group: String!
  name: String!
  id: String!
  type: String!
}

type RoleGetResponse {
  title: String!
  name: String!
  description: String
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  privilege: [RolePrivilegeResponse!]!
}

type AssignRoleResponse {
  success: Boolean!
}

type UnAssignRoleResponse {
  success: Boolean!
}

type PostAuthor {
  id: String!
  name: String!
}

type PostResponse {
  title: String!
  content: String!
  id: String!
  published: Boolean!
  author: PostAuthor!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

type PostListResponse {
  posts: [PostResponse!]!
  pagination: BaseListResponse!
}

type UpdatePostResponse {
  id: String!
}

type CreatePostResponse {
  id: String!
}

type GetPostResponse {
  id: String!
  title: String!
  content: String
  published: Boolean
  authorId: String
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

type CurrentUserResponse {
  email: String!
  name: String
  id: String!
  profileImage: String
  userType: String
  sessionCount: Float!
  roles: [String!]!
  privilege: [RolePrivilegeResponse!]!
}

type GetUserResponse {
  email: String!
  name: String
  id: String!
}

type UpdateProfileResponse {
  success: Boolean!
}

type PassWordResetRequestResponse {
  message: String!
}

type PassWordResetResponse {
  message: String!
}

type LoginResponse {
  token: String
  refreshToken: String
  id: String!
  twoFA: Boolean
}

type SignupResponse {
  id: String!
}

type VerifyEmailResponse {
  token: String!
  refreshToken: String!
}

type CreateWorkspaceResponse {
  id: String!
}

type WorkSpaceResponse {
  name: String!
  id: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

type ListWorkSpaceResponse {
  workspace: [WorkSpaceResponse!]!
  pagination: BaseListResponse!
}

type UpdateWorkspaceResponse {
  id: String!
}

type SendInvitationResponse {
  success: Boolean
}

type User {
  id: String!
  name: String!
  email: String!
}

type MembershipResponse {
  workspaceId: String!
  isOwner: Boolean!
  isAccepted: Boolean!
  user: User!
}

type ListMembershipResponse {
  memberships: [MembershipResponse!]!
  pagination: BaseListResponse!
}

type FileResponse {
  id: String!
  name: String!
  description: String
  size: Int!
  mimeType: String!
  url: String!
  folderId: String
  authorId: String
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  workspaceId: String
}

type ListMediaResponse {
  file: [FileResponse!]!
  pagination: BaseListResponse!
}

type GetFileResponse {
  id: String!
  name: String!
  description: String
  size: Int!
  mimeType: String!
  url: String!
  folderId: String
  authorId: String
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  workspaceId: String
  resizeImages: [GetFileResponse!]
}

type CreateFolderResponse {
  id: String!
  name: String!
  parentId: String
}

type GetFolderResponse {
  name: String!
  id: String!
  parentId: String
  subFolders: [GetFolderResponse!]
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

type FolderResponse {
  name: String!
  id: String!
  parentId: String
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
}

type FolderListResponse {
  folder: [FolderResponse!]!
  pagination: BaseListResponse!
}

type Query {
  login(loginInput: LoginInput!): LoginResponse!
  rateLimitGlobal: String!
  listWorkSpace(listWorkspaceInput: ListWorkSpaceInput): ListWorkSpaceResponse!
  listMemberships(listMembershipsInput: ListMembershipInput!): ListMembershipResponse!
  roleList(roleListInput: RoleListInput): RoleListResponse!
  listBasePrivilege: PrivilegeListResponse!
  getRole(roleGetInput: RoleGetInput!): RoleGetResponse!
  getPostList(getPostListInput: GetPostListInput): PostListResponse!
  getPost(getPostInput: GetPostInput!): GetPostResponse
  getUsers(getUsersInput: GetUsersInput): [GetUserResponse!]!
  currentUser: CurrentUserResponse!
  listMedia(listMediaInput: ListMediaInput): ListMediaResponse!
  getFile(getFileInput: GetFileInput): GetFileResponse
  getFolder(getFolderInput: GetFolderInput!): GetFolderResponse!
  listFolder(listFolderInput: ListFolderInput): FolderListResponse!
}

input LoginInput {
  email: String!
  password: String!
}

input ListWorkSpaceInput {
  page: Int
  pageSize: Int
  orderBy: Order = DESC
  fromStash: Boolean = false
  name: String
  authorId: String
  orderByField: workspaceOrderByField = createdAt
}

enum Order {
  ASC
  DESC
}

enum workspaceOrderByField {
  createdAt
  name
}

input ListMembershipInput {
  page: Int
  pageSize: Int
  orderBy: Order = DESC
  fromStash: Boolean = false
  search: String
}

input RoleListInput {
  page: Int
  pageSize: Int
  orderBy: Order = DESC
  fromStash: Boolean = false
  title: String
  orderByField: roleOrderByField = title
}

enum roleOrderByField {
  createdAt
  title
}

input RoleGetInput {
  id: String!
}

input GetPostListInput {
  page: Int
  pageSize: Int
  orderBy: Order = DESC
  fromStash: Boolean = false
  title: String
  authorId: String
  orderByField: orderByField = id
}

enum orderByField {
  id
  title
  authorId
  published
}

input GetPostInput {
  id: String!
}

input GetUsersInput {
  search: String
}

input ListMediaInput {
  page: Int
  pageSize: Int
  orderBy: Order = DESC
  fromStash: Boolean = false
  orderByField: mediaOrderByField = createdAt
}

enum mediaOrderByField {
  createdAt
  updatedAt
  size
}

input GetFileInput {
  id: String!
  fromStash: Boolean
}

input GetFolderInput {
  id: String!
}

input ListFolderInput {
  page: Int
  pageSize: Int
  orderBy: Order = DESC
  fromStash: Boolean = false
  name: String
  orderByField: FolderOrderByField = id
}

enum FolderOrderByField {
  id
  title
  authorId
  published
}

type Mutation {
  requestPasswordReset(passwordReset: PasswordResetRequestInput!): PassWordResetRequestResponse!
  resetPassword(resetPassword: PasswordResetInput!): PassWordResetResponse!
  signup(signupInput: SignupInput!): SignupResponse!
  verifyEmail(verifyEmailInput: VerifyEmailInput!): VerifyEmailResponse!
  refreshAccessToken(refreshAccessTokenInput: RefreshAccessTokenInput!): VerifyEmailResponse!
  verifyOtp(otpLoginInput: OtpLoginInput!): LoginResponse!
  rateLimitSkip: String!
  rateLimitCustomize: String!
  createWorkspace(createWorkspaceInput: CreateWorkspaceInput!): CreateWorkspaceResponse!
  updateWorkspace(updateWorkspaceInput: UpdateWorkspaceInput!): UpdateWorkspaceResponse!
  deleteWorkSpace(deleteWorkspaceInput: WorkspaceDeleteInput): Boolean!
  sendInvitation(sendInvitationInput: SendInvitationInput!): SendInvitationResponse!
  acceptInvitation(acceptInvitationInput: AcceptInvitationInput!): Boolean!
  createRole(roleCreateInput: RoleCreateInput!): RoleCreateResponse!
  updateRole(roleUpdateInput: RoleUpdateInput!): RoleUpdateResponse!
  deleteRole(roleDeleteInput: RoleDeleteInput): Boolean!
  assignRole(assignRoleInput: AssignRoleInput!): AssignRoleResponse!
  unAssignRole(unAssignRoleInput: UnAssignRoleInput!): UnAssignRoleResponse!
  createPost(createPostInput: CreatePostInput!): CreatePostResponse!
  updatePost(postId: String!, updatePostInput: UpdatePostInput!): UpdatePostResponse!
  deletePost(postDeleteInput: PostDeleteInput): Boolean!
  updateProfile(updateProfileInput: UpdateProfileInput): UpdateProfileResponse!
  deleteFile(fileDeleteInput: FileDeleteInput): Boolean!
  resizeFile(resizeFileInput: ResizeFileInput): JSON!
  createFolder(createFolderInput: CreateFolderInput): CreateFolderResponse!
  deleteFolder(folderDeleteInput: DeleteFolderInput): Boolean!
  updateFolder(updateFolderInput: UpdateFolderInput!): Boolean!
}

input PasswordResetRequestInput {
  email: String!
}

input PasswordResetInput {
  password: String!
}

input SignupInput {
  name: String
  email: String!
  password: String!
}

input VerifyEmailInput {
  token: String!
}

input RefreshAccessTokenInput {
  refreshToken: String!
}

input OtpLoginInput {
  email: String!
  otp: Float!
}

input CreateWorkspaceInput {
  name: String!
}

input UpdateWorkspaceInput {
  id: String!
  name: String!
}

input WorkspaceDeleteInput {
  id: String!
  fromStash: Boolean
}

input SendInvitationInput {
  userId: String!
  workspaceId: String!
}

input AcceptInvitationInput {
  token: String!
  accept: Boolean!
}

input RoleCreateInput {
  title: String!
  description: String
  privileges: [String!]!
}

input RoleUpdateInput {
  id: String!
  title: String!
  description: String
  createPrivileges: [String!]!
  removePrivileges: [String!]!
}

input RoleDeleteInput {
  id: String!
  fromStash: Boolean
}

input AssignRoleInput {
  roleId: String!
  userId: String!
}

input UnAssignRoleInput {
  roleId: String!
  userId: String!
}

input CreatePostInput {
  title: String!
  content: String
  published: Boolean! = false
  authorId: String
}

input UpdatePostInput {
  title: String
  content: String
  published: Boolean! = false
  authorId: String
}

input PostDeleteInput {
  id: String!
  fromStash: Boolean
}

input UpdateProfileInput {
  name: String
  password: String
}

input FileDeleteInput {
  id: String!
  fromStash: Boolean
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

input ResizeFileInput {
  id: String!
  resizeOptions: ImageResizeOptions!
}

input ImageResizeOptions {
  width: Int!
  height: Int!
  left: Int!
  top: Int!
}

input CreateFolderInput {
  name: String!
  parentId: String
}

input DeleteFolderInput {
  id: String!
  fromStash: Boolean
}

input UpdateFolderInput {
  id: String!
  name: String
  parentId: String
}