enum AccessLevel {
  PUBLIC
  RESTRICTED
}

model Folder {
  id   String @id @default(uuid())
  name String

  parentId   String?
  parent     Folder?  @relation("folderRelation", fields: [parentId], references: [id])
  subFolders Folder[] @relation("folderRelation")

  files File[] @relation("fileFolderRelation")

  authorId String
  author   User   @relation(name: "FolderUserRelation", fields: [authorId], references: [id], onDelete: Cascade)

  workspaceId String?
  workspace   Workspace? @relation(name: "workspaceIdFolderRelation", fields: [workspaceId], references: [id], onDelete: Cascade)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  @@unique([name, parentId]) // Prevent duplicate folder names under the same parent
}

model File {
  id       String  @id @default(uuid())
  name     String
  description String?

  resizeImageId   String?
  resizeImagesRef     File?  @relation("resizeImagesRelation", fields: [resizeImageId], references: [id])
  resizeImages File[] @relation("resizeImagesRelation")


  size     Int // File size in kb
  mimeType String // MIME type (e.g., "image/png", "application/pdf")
  url      String // Path or URL to the file
  folderId String?
  folder   Folder? @relation(name: "fileFolderRelation", fields: [folderId], references: [id])

  accessLevel AccessLevel? @default(RESTRICTED)

  authorId String?
  author   User?   @relation(name: "FileUserRelation", fields: [authorId], references: [id])

  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  deletedAt       DateTime?

  workspaceId String?
  workspace   Workspace? @relation(name: "workspaceIdFileRelation", fields: [workspaceId], references: [id], onDelete: Cascade)

  S3AccessSession S3AccessSession[] @relation("fileS3AccessSession")

  @@unique([name, folderId]) // Prevent duplicate file names in the same folder
}

model S3AccessSession {
  id        String   @id @default(uuid())
  signedUrl String
  expiresAt DateTime
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt       DateTime?

  fileId String
  file   File   @relation(name: "fileS3AccessSession", fields: [fileId], references: [id])

  @@unique([fileId, signedUrl]) // Ensure unique signed URL for each file
}
