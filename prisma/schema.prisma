// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id        String      @id @default(uuid())
  name      String      @unique
  UserRole  UserPrivilege[]
  Privilege Privilege[]
}

model UserPrivilege {
  id     String  @id @default(uuid())
  user   User?   @relation(fields: [userId], references: [id])
  userId String?
  role   Role?   @relation(fields: [roleId], references: [id])
  roleId String?
}

enum PrivilegeType {
  CUSTOM
  DEFAULT
}

model Privilege {
  id     String        @id @default(uuid())
  name   String
  type   PrivilegeType? @default(DEFAULT)
  user   User?         @relation(fields: [usreId], references: [id])
  usreId String?
  role   Role?         @relation(fields: [roleId], references: [id])
  roleId String?
}

model User {
  id        String      @id @default(uuid())
  email     String      @unique
  name      String?
  password  String?
  posts     Post[]
  UserRole  UserPrivilege[]
  Privilege Privilege[]
}

model Post {
  id        String   @id @default(uuid())
  title     String
  content   String?
  published Boolean? @default(false)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
}
