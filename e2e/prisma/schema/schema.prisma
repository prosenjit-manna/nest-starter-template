// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["prismaSchemaFolder"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



enum UserType {
  SUPER_ADMIN
  ADMIN
  USER
}

enum userStatus {
  ACTIVE
  INACTIVE
}

model User {
  id                 String     @id @default(uuid())
  email              String     @unique
  name               String?
  password           String?
  verificationToken  String?
  passwordResetToken String?
  isVerified         Boolean    @default(false)
  userStatus         userStatus @default(ACTIVE)
  userType           UserType   @default(USER)
  posts              Post[]
  roles              UserRole[] @relation(name: "userRoleRleation")
  pages              Page[]     @relation(name: "userPageRleation")

  createdAt           DateTime              @default(now())
  updatedAt           DateTime              @updatedAt
  deletedAt           DateTime?
  workspaceMembership WorkspaceMembership[] @relation(name: "userIdMembershipRelation")
  session             Session[]             @relation(name: "userSessionRelation")
}

model Session {
  id     String @id @default(uuid())
  user   User   @relation(name: "userSessionRelation", fields: [userId], references: [id], onDelete: Cascade)
  userId String

  ipAddress String?

  refreshToken       String?
  refreshTokenExpiry DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

